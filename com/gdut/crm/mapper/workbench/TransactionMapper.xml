<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdut.crm.mapper.workbench.TransactionMapper">
  <resultMap id="BaseResultMap" type="Transaction">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="owner" jdbcType="CHAR" property="owner" />
    <result column="money" jdbcType="VARCHAR" property="money" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="expected_date" jdbcType="CHAR" property="expectedDate" />
    <result column="customer_id" jdbcType="CHAR" property="customerId" />
    <result column="stage" jdbcType="VARCHAR" property="stage" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="activity_id" jdbcType="CHAR" property="activityId" />
    <result column="contacts_id" jdbcType="CHAR" property="contactsId" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="CHAR" property="createTime" />
    <result column="edit_by" jdbcType="VARCHAR" property="editBy" />
    <result column="edit_time" jdbcType="CHAR" property="editTime" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="contact_summary" jdbcType="VARCHAR" property="contactSummary" />
    <result column="next_contact_time" jdbcType="CHAR" property="nextContactTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_tran
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="Transaction">
    insert into t_tran (id, owner, money, name, 
      expected_date, customer_id, stage, 
      type, source, activity_id, 
      contacts_id, create_by, create_time, 
      edit_by, edit_time, description, 
      contact_summary, next_contact_time)
    values (#{id,jdbcType=CHAR}, #{owner,jdbcType=CHAR}, #{money,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{expectedDate,jdbcType=CHAR}, #{customerId,jdbcType=CHAR}, #{stage,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{source,jdbcType=VARCHAR}, #{activityId,jdbcType=CHAR}, 
      #{contactsId,jdbcType=CHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=CHAR}, 
      #{editBy,jdbcType=VARCHAR}, #{editTime,jdbcType=CHAR}, #{description,jdbcType=VARCHAR}, 
      #{contactSummary,jdbcType=VARCHAR}, #{nextContactTime,jdbcType=CHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="Transaction">
    update t_tran
    set owner = #{owner,jdbcType=CHAR},
      money = #{money,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      expected_date = #{expectedDate,jdbcType=CHAR},
      customer_id = #{customerId,jdbcType=CHAR},
      stage = #{stage,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      activity_id = #{activityId,jdbcType=CHAR},
      contacts_id = #{contactsId,jdbcType=CHAR},
      edit_by = #{editBy,jdbcType=VARCHAR},
      edit_time = #{editTime,jdbcType=CHAR},
      description = #{description,jdbcType=VARCHAR},
      contact_summary = #{contactSummary,jdbcType=VARCHAR},
      next_contact_time = #{nextContactTime,jdbcType=CHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, owner, money, name, expected_date, customer_id, stage, type, source, activity_id, 
    contacts_id, create_by, create_time, edit_by, edit_time, description, contact_summary, 
    next_contact_time
    from t_tran
    where id = #{id,jdbcType=CHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, owner, money, name, expected_date, customer_id, stage, type, source, activity_id, 
    contacts_id, create_by, create_time, edit_by, edit_time, description, contact_summary, 
    next_contact_time
    from t_tran
  </select>
  <insert id="insertFormTransferClue">
    insert t_tran(id, owner, money, name, expected_date, customer_id, stage, type, source, activity_id,
    contacts_id, create_by, create_time, edit_by, edit_time, description, contact_summary,
    next_contact_time)
    values (#{id,jdbcType=CHAR}, #{owner,jdbcType=CHAR}, #{money,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
    #{expectedDate,jdbcType=CHAR}, #{customerId,jdbcType=CHAR}, #{stage,jdbcType=VARCHAR},
    #{type,jdbcType=VARCHAR}, #{source,jdbcType=VARCHAR}, #{activityId,jdbcType=CHAR},
    #{contactsId,jdbcType=CHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=CHAR},
    #{editBy,jdbcType=VARCHAR}, #{editTime,jdbcType=CHAR}, #{description,jdbcType=VARCHAR},
    #{contactSummary,jdbcType=VARCHAR}, #{nextContactTime,jdbcType=CHAR})
  </insert>
  <select id="selectByCustomerId" resultMap="BaseResultMap">
    select t.id, money, name, expected_date,v.value as stage,v2.value as type
    from t_tran t
    join t_dic_value v on v.id=t.stage
    left join t_dic_value v2 on v2.id=t.type
    where customer_id = #{id}
  </select>
  <select id="selectByContactsId" resultType="com.gdut.crm.pojo.workbench.Transaction">
    select t.id, money, name, expected_date,v.value as stage,v2.value as type
    from t_tran t
           join t_dic_value v on v.id=t.stage
           left join t_dic_value v2 on v2.id=t.type
    where t.contacts_id = #{id}
  </select>
  <select id="selectTransactionsByConditions" resultMap="BaseResultMap">
select t.id,u1.name as owner, t.name,c1.name as customer_id,v1.value as stage,v2.value as type,v3.value as source,c2.fullname as contacts_id
    from t_tran t
    join t_user u1 on u1.id=t.owner
    join t_customer c1 on c1.id=t.customer_id
    join t_dic_value v1 on v1.id=t.stage
    left join t_dic_value v2 on v2.id=t.type
    left join t_dic_value v3 on v3.id=t.source
    left join t_contacts c2 on c2.id=t.contacts_id
    <where>
      <if test="owner!=null and owner!=''">
        and u1.name like concat('%',#{owner},'%')
      </if>
      <if test="customerName!=null and customerName!=''">
        and c1.name like concat('%',#{customerName},'%')
      </if>
      <if test="name!=null and name!=''">
        and t.name like concat('%',#{name},'%')
      </if>
      <if test="stage!=null and stage!=''">
        and t.stage = #{stage}
      </if>
      <if test="type!=null and type!=''">
        and t.type = #{type}
      </if>
      <if test="source!=null and source!=''">
        and t.source = #{source}
      </if>
      <if test="contactsId!=null and contactsId!=''">
        and c2.fullname like concat('%',#{contactsId},'%')
      </if>
    </where>
    order by t.create_time asc
    limit #{startRow},#{count}
  </select>
  <select id="countTransactionByConditons" resultType="java.lang.Integer">
    select count(*)
    from t_tran t
    join t_user u1 on u1.id=t.owner
    join t_customer c1 on c1.id=t.customer_id
    join t_dic_value v1 on v1.id=t.stage
    left join t_dic_value v2 on v2.id=t.type
    left join t_dic_value v3 on v3.id=t.source
    left join t_contacts c2 on c2.id=t.contacts_id
    <where>
      <if test="owner!=null and owner!=''">
        and u1.name like concat('%',#{owner},'%')
      </if>
      <if test="customerName!=null and customerName!=''">
        and c1.name like concat('%',#{customerName},'%')
      </if>
      <if test="name!=null and name!=''">
        and t.name like concat('%',#{name},'%')
      </if>
      <if test="stage!=null and stage!=''">
        and t.stage = #{stage}
      </if>
      <if test="type!=null and type!=''">
        and t.type = #{type}
      </if>
      <if test="source!=null and source!=''">
        and t.id = #{source}
      </if>
      <if test="contactsId!=null and contactsId!=''">
        and c2.fullname like concat('%',#{contactsId},'%')
      </if>
    </where>
  </select>
  <delete id="deleteTranBatch">
    delete from t_tran
    where id in
    <foreach collection="ids" item="id" separator="," open="(" close=")">
      #{id}
    </foreach>
  </delete>
  <select id="selectOneByPrimaryKey" resultMap="BaseResultMap">
    select t.id,t.owner, t.name,c1.name as customer_id,money,t.expected_date,t.stage,type,t.source,contacts_id,
      t.activity_id,t.description, t.contact_summary,t.next_contact_time
    from t_tran t
        join t_customer c1 on c1.id=t.customer_id
        left join t_activity a on a.id=t.activity_id
        left join t_contacts c2 on c2.id=t.contacts_id
    where t.id=#{id}
  </select>
  <select id="selectTranByPrimaryKey" resultType="com.gdut.crm.pojo.workbench.Transaction">
    select t.id,u2.name as owner, t.name,c1.name as customer_id,money,t.expected_date,v.value as stage,v.order_no as StageNo,v3.value as type,v2.value as source,c2.fullname as contacts_id,
           a.name as activity_id,u1.name as create_by, t.create_time,u3.name as edit_by, t.edit_time,t.description, t.contact_summary,t.next_contact_time
    from t_tran t
        join t_customer c1 on c1.id=t.customer_id
        join t_user u1 on u1.id=t.create_by
        join t_user u2 on u2.id=t.owner
        left join t_user u3 on u3.id=t.edit_by
        left join t_activity a on a.id=t.activity_id
        left join t_contacts c2 on c2.id=t.contacts_id
        left join t_dic_value v on v.id = t.stage
        left join t_dic_value v2 on v2.id=t.source
        left join t_dic_value v3 on v3.id=t.type
    where t.id=#{id}
  </select>
  <select id="selectFunnelByStage" resultType="com.gdut.crm.pojo.workbench.Funnel">
    select count(*) as value,v.value as name
    from t_tran t
    join t_dic_value v on v.id=t.stage
    group by t.stage
  </select>
</mapper>