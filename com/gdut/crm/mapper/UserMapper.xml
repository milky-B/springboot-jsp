<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdut.crm.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="user">
        <id column="id" jdbcType="CHAR" property="id"/>
        <result column="login_act" jdbcType="VARCHAR" property="loginAct"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="login_pwd" jdbcType="VARCHAR" property="loginPwd"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="expire_time" jdbcType="CHAR" property="expireTime"/>
        <result column="lock_state" jdbcType="CHAR" property="lockState"/>
        <result column="deptno" jdbcType="CHAR" property="deptno"/>
        <result column="allow_ips" jdbcType="VARCHAR" property="allowIps"/>
        <result column="createTime" jdbcType="CHAR" property="createtime"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="edit_time" jdbcType="CHAR" property="editTime"/>
        <result column="edit_by" jdbcType="VARCHAR" property="editBy"/>
    </resultMap>
    <sql id="user_all_columns">
        id
        , login_act, name,
      login_pwd, email, expire_time,
      lock_state, deptno, allow_ips,
      createTime, create_by, edit_time,
      edit_by,salt
    </sql>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from t_user
        where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
    <insert id="insert" parameterType="User">
        insert into t_user (<include refid="user_all_columns"/>)
        values (#{id,jdbcType=CHAR}, #{loginAct,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
        #{loginPwd,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{expireTime,jdbcType=CHAR},
        #{lockState,jdbcType=CHAR}, #{deptno,jdbcType=CHAR}, #{allowIps,jdbcType=VARCHAR},
        #{createtime,jdbcType=CHAR}, #{createBy,jdbcType=VARCHAR}, #{editTime,jdbcType=CHAR},
        #{editBy,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR})
    </insert>
    <update id="updateByPrimaryKey" parameterType="User">
        update t_user
        set login_act   = #{loginAct,jdbcType=VARCHAR},
            name        = #{name,jdbcType=VARCHAR},
            login_pwd   = #{loginPwd,jdbcType=VARCHAR},
            email       = #{email,jdbcType=VARCHAR},
            expire_time = #{expireTime,jdbcType=CHAR},
            lock_state  = #{lockState,jdbcType=CHAR},
            deptno      = #{deptno,jdbcType=CHAR},
            allow_ips   = #{allowIps,jdbcType=VARCHAR},
            createTime  = #{createtime,jdbcType=CHAR},
            create_by   = #{createBy,jdbcType=VARCHAR},
            edit_time   = #{editTime,jdbcType=CHAR},
            edit_by     = #{editBy,jdbcType=VARCHAR}
        where id = #{id,jdbcType=CHAR}
    </update>
    <update id="updateSelective" parameterType="user">
        update t_user
        <set>
            <if test="user.editBy != null and user.editBy != ''">
                edit_by = #{user.editBy,jdbcType=CHAR},
            </if>
            <if test="user.editTime != null and user.editTime != ''">
                edit_time = #{user.editTime,jdbcType=CHAR},
            </if>
            <if test=" user.lockState != null and  user.lockState != ''">
                lock_state = #{user.lockState,jdbcType=CHAR},
            </if>
            <if test=" user.name != null and  user.name != ''">
                name = #{user.name,jdbcType=CHAR},
            </if>
            <if test=" user.email != null and  user.email != ''">
                email = #{user.email,jdbcType=CHAR},
            </if>
            <if test=" user.expireTime != null and  user.expireTime != ''">
                expire_time = #{user.expireTime,jdbcType=CHAR},
            </if>
            <if test=" user.allowIps != null and  user.allowIps != ''">
                allow_ips = #{user.allowIps,jdbcType=CHAR},
            </if>
        </set>
        where id = #{user.id,jdbcType=CHAR}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="user_all_columns"/>
        from t_user
        where id = #{id,jdbcType=CHAR}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="user_all_columns"/>
        from t_user
    </select>


    <select id="selectUserByUsernameAndPassword" resultMap="BaseResultMap">
        select
        <include refid="user_all_columns"/>
        from t_user
        where login_pwd = #{loginPwd} and login_act = #{loginAct}
    </select>

    <select id="selectUserByLoginAct" resultMap="BaseResultMap">
        select
        <include refid="user_all_columns"/>
        from t_user
        where login_act=#{id}
    </select>
    <select id="selectUser" resultMap="BaseResultMap">
        select
        <include refid="user_all_columns"/>
        from t_user
        <where>
            <if test="lockState!='' and lockState!=null">
                and lock_state = #{lockState}
            </if>
            <if test="name!='' and name!=null">
                and name like concat(#{name},'%')
            </if>
            <if test="startTime!=null and startTime!=''">
                and expire_time >= #{startTime}
            </if>
            <if test="endTime!=null and endTime!=''">
                and expire_time &lt;= #{endTime}
            </if>
            <if test="roleId!=null">
                and id in (
                select user_id from t_user_role where role_id = roleId
                )
            </if>
        </where>
        <if test="pagingData">
            limit #{startRow},#{pageSize}
        </if>
    </select>
    <select id="findRoleIdByUserId" resultType="java.lang.String">
        select role_id
        from t_user_role
        where user_id = #{id}
    </select>
    <select id="count" resultType="java.lang.Long">
        select count(id)
        from t_user
        <where>
        <if test="lockState!='' and lockState!=null">
            and lock_state = #{lockState}
        </if>
        <if test="name!='' and name!=null">
            and name like concat(#{name},'%')
        </if>
        <if test="startTime!=null and startTime!=''">
            and expire_time >= #{startTime}
        </if>
        <if test="endTime!=null and endTime!=''">
            and expire_time &lt;= #{endTime}
        </if>
        <if test="roleId!=null">
            and id in (
            select user_id from t_user_role where role_id = roleId
            )
        </if>
        </where>
    </select>
</mapper>